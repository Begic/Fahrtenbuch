@page "/"
@inject UserService UserService

@inject ITripProviders TripProvider
@inject IDialogService DialogService
@inject ISnackbar Toaster

<PageTitle>Fahrten</PageTitle>

<LoadingPage IsLoading="@(allTripsInfos == null)">
    <DefaultLayout Title="Autos">
        <Actions>
            <MudTooltip Text="Hinzufügen">
                <MudButton Color="@Color.Success" ButtonType="@ButtonType.Button" Variant="@Variant.Filled" OnClick="@OnClickAdd" EndIcon="@Icons.Material.Filled.AddCircle">Hinzufügen</MudButton>
            </MudTooltip>
        </Actions>
        <Content>
            <MudDataGrid Items="@allTripsInfos"
                         Dense="@true"
                         Striped="@true"
                         Hover="@true"
                         Virtualize="@true">
                <Columns>
                    <PropertyColumn Title="Datum" Property="@(x => x.Date)" Format="d"/>
                    <PropertyColumn Title="Start-Zeit" Property="@(x => x.StartTimeStamp)" Format="t"/>
                    <PropertyColumn Title="End-Zeit" Property="@(x => x.EndTimeStamp)" Format="t"/>
                    <PropertyColumn Title="KM-Abfahrt" Property="@(x => x.DepartureMileage)" />
                    <PropertyColumn Title="KM-Ankunft" Property="@(x => x.ArrivalMileage)" />
                    <PropertyColumn Title="Auto" Property="@(x => x.CompanyCar)" />
                    <PropertyColumn Title="Route" Property="@(x => x.TravelRoute)" />
                    <PropertyColumn Title="Grund" Property="@(x => x.PurposeOfTrip)"/>
                    <TemplateColumn>
                        <CellTemplate>
                            <MudStack Row>
                                <MudTooltip Text="Bearbeiten">
                                    <MudFab Size="@Size.Small" IconSize="@Size.Small" Color="@Color.Warning" StartIcon="@Icons.Material.Filled.Edit" OnClick="() => OnClickEdit(context.Item)"/>
                                </MudTooltip>
                                <MudTooltip Text="Löschen">
                                    <MudFab Size="@Size.Small" IconSize="@Size.Small" Color="@Color.Error" StartIcon="@Icons.Material.Filled.Delete" OnClick="() => OnDelete(context.Item)"/>
                                </MudTooltip>
                            </MudStack>
                        </CellTemplate>
                    </TemplateColumn>
                </Columns>
            </MudDataGrid>
        </Content>
    </DefaultLayout>
</LoadingPage>

@code
{
    private List<TripInfo> allTripsInfos;
    
    protected override async Task OnInitializedAsync()
    {
        await Refresh();
    }

    private async Task Refresh()
    {
        allTripsInfos = await TripProvider.GetAllTripsInfos(UserService.CurrentUser);
    }

    private async Task OnClickAdd()
    {
        var result = await DialogService.ShowAsync<DialogEditTrip>(string.Empty, new DialogParameters(), new DialogOptions
        {
            CloseOnEscapeKey = false,
            DisableBackdropClick = true
        });

        var toReload = await result.Result;
        await Refresh();
    }

    private async Task OnClickEdit(TripInfo? info)
    {
        var result = await DialogService.ShowAsync<DialogEditTrip>(string.Empty, new DialogParameters()
        {
            {nameof(DialogEditTrip.Trip), info},
        }, new DialogOptions
        {
            CloseOnEscapeKey = false,
            DisableBackdropClick = true
        });

        var toReload = await result.Result;
        await Refresh();
    }

    private async Task OnDelete(TripInfo? info)
    {
        var result = await DialogService.ShowAsync<DialogDelete>("Achtung !", new DialogParameters(), new DialogOptions
        {
            CloseOnEscapeKey = false,
            DisableBackdropClick = true
        });
        
        if ((bool)(await result.Result).Data)
        {
            await TripProvider.DeleteTrip(info.Id);
            Toaster.Add("Erfolgreich gelöscht", Severity.Success);
            await Refresh();
        }
    }
}